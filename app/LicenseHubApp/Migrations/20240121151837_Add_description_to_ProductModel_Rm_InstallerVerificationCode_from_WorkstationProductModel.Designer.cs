// <auto-generated />
using System;
using LicenseHubApp.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LicenseHubApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240121151837_Add_description_to_ProductModel_Rm_InstallerVerificationCode_from_WorkstationProductModel")]
    partial class Add_description_to_ProductModel_Rm_InstallerVerificationCode_from_WorkstationProductModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("EmployeeModelWorkstationModel", b =>
                {
                    b.Property<int>("EmployeesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkstationsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EmployeesId", "WorkstationsId");

                    b.HasIndex("WorkstationsId");

                    b.ToTable("EmployeeModelWorkstationModel");
                });

            modelBuilder.Entity("LicenseHubApp.Models.ActivationCodeModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LicenseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LicenseId")
                        .IsUnique();

                    b.ToTable("ActivationCodes");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("LicenseHubApp.Models.CompanyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Localizations")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Websites")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Nip")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("LicenseHubApp.Models.EmployeeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Emails")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IPs")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumbers")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Websites")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("LicenseHubApp.Models.LicenseModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActivationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RegisterDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkstationProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WorkstationProductId")
                        .IsUnique();

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("LicenseHubApp.Models.OrderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfOrder")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfPayment")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("LicenseHubApp.Models.ProductModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("LicenseHubApp.Models.ProductReleaseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InstallerVerificationPasscode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReleaseNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReleaseNumber")
                        .IsUnique();

                    b.ToTable("ProductReleases");
                });

            modelBuilder.Entity("LicenseHubApp.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LicenseHubApp.Models.WorkstationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BiosVersion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ComputerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cpu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HardDisk")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasFault")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Os")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OsBitVersion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Workstations");
                });

            modelBuilder.Entity("LicenseHubApp.Models.WorkstationProductModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReleaseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkstationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ReleaseId");

                    b.HasIndex("WorkstationId");

                    b.ToTable("WorkstationProducts");
                });

            modelBuilder.Entity("LicenseHubApp.Models.GeneratedActivationCodeModel", b =>
                {
                    b.HasBaseType("LicenseHubApp.Models.ActivationCodeModel");

                    b.Property<string>("CodeGeneratorVersion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("GeneratedActivationCodes", (string)null);
                });

            modelBuilder.Entity("LicenseHubApp.Models.PerpetualLicenseModel", b =>
                {
                    b.HasBaseType("LicenseHubApp.Models.LicenseModel");

                    b.ToTable("PerpetualLicenses", (string)null);
                });

            modelBuilder.Entity("LicenseHubApp.Models.SubscriptionLicenseModel", b =>
                {
                    b.HasBaseType("LicenseHubApp.Models.LicenseModel");

                    b.Property<int>("LeaseTermInDays")
                        .HasColumnType("INTEGER");

                    b.ToTable("SubscriptionLicenses", (string)null);
                });

            modelBuilder.Entity("EmployeeModelWorkstationModel", b =>
                {
                    b.HasOne("LicenseHubApp.Models.EmployeeModel", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicenseHubApp.Models.WorkstationModel", null)
                        .WithMany()
                        .HasForeignKey("WorkstationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LicenseHubApp.Models.ActivationCodeModel", b =>
                {
                    b.HasOne("LicenseHubApp.Models.LicenseModel", "License")
                        .WithOne("ActivationCode")
                        .HasForeignKey("LicenseHubApp.Models.ActivationCodeModel", "LicenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("License");
                });

            modelBuilder.Entity("LicenseHubApp.Models.EmployeeModel", b =>
                {
                    b.HasOne("LicenseHubApp.Models.CompanyModel", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("LicenseHubApp.Models.LicenseModel", b =>
                {
                    b.HasOne("LicenseHubApp.Models.WorkstationProductModel", "WorkstationProduct")
                        .WithOne("License")
                        .HasForeignKey("LicenseHubApp.Models.LicenseModel", "WorkstationProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkstationProduct");
                });

            modelBuilder.Entity("LicenseHubApp.Models.OrderModel", b =>
                {
                    b.HasOne("LicenseHubApp.Models.CompanyModel", "Company")
                        .WithMany("Orders")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("LicenseHubApp.Models.ProductReleaseModel", b =>
                {
                    b.HasOne("LicenseHubApp.Models.ProductModel", "Product")
                        .WithMany("Releases")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("LicenseHubApp.Models.WorkstationModel", b =>
                {
                    b.HasOne("LicenseHubApp.Models.CompanyModel", "Company")
                        .WithMany("Workstations")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("LicenseHubApp.Models.WorkstationProductModel", b =>
                {
                    b.HasOne("LicenseHubApp.Models.OrderModel", "Order")
                        .WithMany("WorkstationProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicenseHubApp.Models.ProductReleaseModel", "ProductRelease")
                        .WithMany("WorkstationProducts")
                        .HasForeignKey("ReleaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicenseHubApp.Models.WorkstationModel", "Workstation")
                        .WithMany("WorkstationProducts")
                        .HasForeignKey("WorkstationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("ProductRelease");

                    b.Navigation("Workstation");
                });

            modelBuilder.Entity("LicenseHubApp.Models.CompanyModel", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Orders");

                    b.Navigation("Workstations");
                });

            modelBuilder.Entity("LicenseHubApp.Models.LicenseModel", b =>
                {
                    b.Navigation("ActivationCode");
                });

            modelBuilder.Entity("LicenseHubApp.Models.OrderModel", b =>
                {
                    b.Navigation("WorkstationProducts");
                });

            modelBuilder.Entity("LicenseHubApp.Models.ProductModel", b =>
                {
                    b.Navigation("Releases");
                });

            modelBuilder.Entity("LicenseHubApp.Models.ProductReleaseModel", b =>
                {
                    b.Navigation("WorkstationProducts");
                });

            modelBuilder.Entity("LicenseHubApp.Models.WorkstationModel", b =>
                {
                    b.Navigation("WorkstationProducts");
                });

            modelBuilder.Entity("LicenseHubApp.Models.WorkstationProductModel", b =>
                {
                    b.Navigation("License")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
